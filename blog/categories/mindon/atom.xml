<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Mindon | Mindon.IDEA]]></title>
  <link href="http://mindon.github.com/blog/categories/mindon/atom.xml" rel="self"/>
  <link href="http://mindon.github.com/"/>
  <updated>2013-02-18T20:47:47+08:00</updated>
  <id>http://mindon.github.com/</id>
  <author>
    <name><![CDATA[Mindon Feng]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[若有实验室版的微信 - 不仅仅是聊天]]></title>
    <link href="http://mindon.github.com/blog/2013/02/16/its-more-than-chatting-the-wechat/"/>
    <updated>2013-02-16T23:01:00+08:00</updated>
    <id>http://mindon.github.com/blog/2013/02/16/its-more-than-chatting-the-wechat</id>
    <content type="html"><![CDATA[<p>假设微信不是一个聊天工具，重新将其功能DIY一下会得到怎样的一个应用呢？</p>

<p>于是，尝试使用Context - Connected - Contagious的3C思维来整理一下对微信体验。</p>

<p>首先，微信已经成功创造并形成了一个相当好的Context(毫无疑问，这个Context形成于QQ和QQ邮箱这样良好的Contexts下)，在这个Context下让QQ用户之间，用户与服务提供者，公众人物建立起了新的关联 - Connected! 其传染途径-朋友圈，分享，共振(摇一摇-动作，附近-区域，漂流瓶-心理)，二维码。</p>

<p>关联之后有两类必然目的: I/O 输入/输出。</p>

<p><strong>输入类</strong>: 价值获取，情感影响
<strong>输出类</strong>: 分享(有价值，有情感触动)，自我表达</p>

<p>输入的目的-输出更有效; 输出的目的-传染并收获新的关联-从而强化I/O循环，形成回路结构体。</p>

<p>基于这个3C思维分析，如何对微信这样一个日益复杂的产品体验进形DIY呢?</p>

<!--more-->


<h2>-   输入</h2>

<p>获取输入的唯一途径是关联: 已有关联在这里是不被关注的，除非关联内客或其影响发生了变化。关联不足是输入最亟需解决的问题，而常用的方案就是关联发现。同时，营造关朕不足感也是促进输入成长的关键要素。而下一步则是提高输入品质，解决新关联建立导致的输入膨胀的问题。</p>

<p>于是，朋友圈更新，最喜欢的订阅，最关注的公众人物成为第一类主体，而当这类内容不足或不够活跃时，提供关联发现; 内容到一定量时，提供过滤筛选功能。</p>

<p>第三方应用的分享也是一个重要的输入来源，基于这个，可以考虑提供第三方应用列表或推荐形式。</p>

<h2>-   输出</h2>

<p>如果缺乏关联，输出只能算是一种笔记积累或自娱自乐。而输出最期待的结果是反馈-特别是正面的回馈。</p>

<p>分享属于把输入直接传递，自我表达则是强化形像获取认可的更佳途径。</p>

<p>由于分享源于输入，故输出重点是自我表达-向具体关联对象或群体, 或自己表达自我情感，自己的作品。</p>

<p>输出的关键是具有传染特性，只有这样才可以维持关联的活跃度，提升新关联建立的机率。</p>

<p>基于对输入和输出的认识，可以发现：刺激关联不足感和辅助提升输入品质，强化表达的传染特性是最核心的任务──即培养关联的Context创建。</p>

<p><img src="/images/blog/wechat-more-than-chatting.png" alt="" /></p>

<p><i id="link-tags">WeChat;微信</i></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The PHP-CLD: Chromium Compact Language Detector for PHP]]></title>
    <link href="http://mindon.github.com/blog/2013/02/06/the-php-cld-chromium-compact-language-detector-for-php/"/>
    <updated>2013-02-06T00:05:00+08:00</updated>
    <id>http://mindon.github.com/blog/2013/02/06/the-php-cld-chromium-compact-language-detector-for-php</id>
    <content type="html"><![CDATA[<p>Find a fantasy extension for php to detect string language.</p>

<p><a href="https://github.com/lstrojny/php-cld">https://github.com/lstrojny/php-cld</a></p>

<p><a href="http://code.google.com/p/chromium-compact-language-detector/">http://code.google.com/p/chromium-compact-language-detector/</a></p>

<p>It needs some changes to complie as dll in VC++ 2010 Express. But easy to make the so under linux.</p>

<p>I'd spent the whole day to make research on language detect modules for php, it's the best and now works fine in my project.</p>

<p>Thanks, <a href="https://github.com/lstrojny">Lars Strojny</a> from github.</p>

<p>Don't hesitate to use php-cld when you need something like this in php.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LISP, PhoneGap and TAKEN DOWN]]></title>
    <link href="http://mindon.github.com/blog/2013/01/31/lisp-phonegap-taken-down/"/>
    <updated>2013-01-31T22:16:00+08:00</updated>
    <id>http://mindon.github.com/blog/2013/01/31/lisp-phonegap-taken-down</id>
    <content type="html"><![CDATA[<p>Learning GO language a few weeks before. Now the LISP.</p>

<p>Scheme is a dialect of Lisp that stresses conceptual elegance and simplicity.</p>

<p>The definition of Scheme tells what attracts me to learn this language. It is what it describes.</p>

<p>I spared a few hours learning from <a href="http://www.htdp.org/2003-09-26/Book/">How to Design Programs</a> with exercises. Another great book from MIT <a href="http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-10.html">Structure and Interpretation
of Computer Programs</a>.</p>

<p>DrRacket: <a href="http://racket-lang.org/">http://racket-lang.org/</a></p>

<p>I don't think I have any chances to use it. Go and Node.JS are enough.</p>

<p>On the other way, I learn to setup PhoneGap env. in my computer at home. And my first android app demo runs in my Nexus 7. I will put it here soon instead of Google Play.</p>

<p>And this morning, I got an E-mail from Google Chrome Web Store -- Removal Notification for "Ingress Portals Finder"</p>

<blockquote><p>Your Google Chrome item, "Ingress Portals Finder," did not comply with our policies on Prohibited Products and was removed from the Google Chrome Web Store.</p></blockquote>

<!--more-->


<p>What a pity. It's the most welcome extension of my works. It just reached 4k+ installation before its removal.</p>

<p>That's the TAKEN DOWN.</p>

<p>It won't stress much on the Ingress server, instead, it will less stress.</p>

<ol>
<li><p>high quality developed.</p></li>
<li><p>welcome and really useful with nice UI.</p></li>
<li><p>avoid variety tool versions with almost same functions, controllable third-party tool entrance.</p></li>
</ol>


<p>But it's true, NO PERMISSION from ingress.com to allow me to call its one API.</p>

<p>But, what if my extension is a customized browser?  Display websites better that it is, should I need permissions from all the websites being improved? (I really could make such a customized browser :p)</p>

<p>No matter what, I'm on the way to my next app, useful and helpful with UI satisfy me first.</p>

<p><i id="link-tags">LISP;Scheme;PhoneGap;Node.JS;GO;Ingress;Chrome Web Store;Prohibited Products</i></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ingress Portals Finder - A Chrome Extension for the Game]]></title>
    <link href="http://mindon.github.com/blog/2013/01/26/incredible-ingress-portals-finder-a-chrome-extension-for-the-game/"/>
    <updated>2013-01-26T15:00:00+08:00</updated>
    <id>http://mindon.github.com/blog/2013/01/26/incredible-ingress-portals-finder-a-chrome-extension-for-the-game</id>
    <content type="html"><![CDATA[<p>To find ingress portals inside a specific area, you would need the Chrome Extension: <a href="https://chrome.google.com/webstore/detail/ingress-portals-finder/pglalnoakjpjaaobdjabdkedimkdnegk?hl=en-US">Ingress Portals Finder</a> (TAKEN DOWN, the blog provides the link of the CRX file for manual installation).</p>

<p><img src="/images/blog/ingress/ingress-portals-finder-logo.png" alt="" /></p>

<p>The extension has 3 windows:</p>

<p><strong>Main window</strong></p>

<p><img src="/images/blog/ingress/main.jpg" alt="" /></p>

<p><strong>About window</strong></p>

<p><img src="/images/blog/ingress/about.jpg" alt="" /></p>

<p>The last one is the map window for all portals inside the bounds.(skip screenshot)</p>

<p><strong>Easy Usage</strong>: 1) Set Bounds; 2) Click Query; 3) Filter by Tag, Team or Level.</p>

<h2>The CRX file (v1.3.7)</h2>

<p>It's taken down from Chrome Web Store today. Here's the temporary link for the CRX file of the extension: <a href="/soft/ingress-portals-finder-1.3.7.crx">Download Ingress Portals Finder</a> (MD5: <strong>7448feb6f2cbb7f502e35a86ccb1411a</strong>)</p>

<p>INSTALL STEPS: 1) Download and save the CRX file  2) open chrome://extensions/  3) Drag and drop the CRX file in the window...</p>

<h2>Updates:</h2>

<p>v1.3.7 fix bugs, MD5: <strong>7448feb6f2cbb7f502e35a86ccb1411a</strong>
v1.3.6 MD5: ed1f5b0b8984f474b8fecebf9e6c7a99</p>

<h2>More Details</h2>

<p>Following describe is focusing on the features you need to know about this amazing helpful extension.</p>

<!--more-->


<h2><strong>A)</strong> Why an About window?</h2>

<p>The <strong>Ingress Portals Finder</strong> works only in the <a href="http://www.ingress.com/intel">Ingress Map Offical Site</a>.</p>

<p>That's why this extension needs an <strong>About</strong> window: when you click the extension icon in other tabs, the about window leads you to the proper website.</p>

<p><img src="/images/blog/ingress/1-start.jpg" alt="" /></p>

<h2><strong>B)</strong> A small donate may help.</h2>

<p><img src="/images/blog/ingress/2-donate.jpg" alt="" /></p>

<h2><strong>C)</strong> Main stage of Ingress Portals Finder</h2>

<p>Click the extension icon on the tab where ingress.com/intel opened, you will see the main window of <strong>Ingress Portals Finder</strong>.</p>

<p>First, you will need to set the bounds of the area you concern on.</p>

<p><img src="/images/blog/ingress/3-bounds.jpg" alt="" /></p>

<p>In 2 situations you may fail to call up the google map window, which would help a lot to select bounds. 1) Fail to access <a href="http://maps.google.com">http://maps.google.com</a>; 2) Default google map api daily quato running out. (Thanks, Google! The quato increased to 25k today)</p>

<p>Even when map failed to show, you still could input the bounds to query.</p>

<p>And another solution will be input your own google map api key to solve the quato problem.</p>

<h2><strong>D)</strong>  Submit a query</h2>

<p>When your bounds set, click "Query" to make the request.</p>

<p>Here, to avoid stress on the official ingress server, the extension will cache 5 minutes for the same bounds.</p>

<p><img src="/images/blog/ingress/4-query.jpg" alt="" /></p>

<p>Be patient, the query may takes time, it depends on your network speed or the bounds area scale. But I don't think it will take more than 3 minutes.</p>

<h2><strong>E)</strong> Filtering on the query result</h2>

<p>The filter works on the query result. It won't stress on the server.</p>

<p>1) Key words off the address;  2) Teams;  3) Levels</p>

<p>There're tips on the level filtering:</p>

<p><img src="/images/blog/ingress/5-level.jpg" alt="" /></p>

<p>Click the <strong>[a]</strong> to select all levels. and you could press "Ctrl" + click to click levels you want to list.</p>

<h2><strong>F)</strong> Which team is in charge?</h2>

<p>The vertical bar beside the level number, you could see the status of portals -- more green or more blue.</p>

<p><img src="/images/blog/ingress/6-vs.jpg" alt="" /></p>

<h2><strong>G)</strong> Query result</h2>

<p>The result includes name, photo, address, resonations, (level,energy,link,mods).</p>

<p>You could get the location of the portal by click the google map icon.</p>

<p><img src="/images/blog/ingress/7-locate.jpg" alt="" /></p>

<p>The icon will call up an embed map window with marker of the portal. It will open a blank map window if the embed map api fails.</p>

<h2><strong>H)</strong> Level, Enery, Links and Mods</h2>

<p><img src="/images/blog/ingress/8-status.jpg" alt="" /></p>

<h2><strong>I)</strong> List result portals in a full scale map</h2>

<p>Left corner of the portal embed map window, you could find a transparent button "All".</p>

<p><img src="/images/blog/ingress/9-all.jpg" alt="" /></p>

<p>It opens a full map of the portals in the query result.</p>

<p>And you could show the specific level on the map:</p>

<p><img src="/images/blog/ingress/0-select.jpg" alt="" /></p>

<h2><strong>J)</strong> Set Bounds more easily - Search place by name</h2>

<p><img src="/images/blog/ingress/b-search.jpg" alt="" /></p>

<h2><strong>K)</strong> Sort by Energy/Links/Mods</h2>

<p><img src="/images/blog/ingress/a-sort.jpg" alt="" /></p>

<h2><strong>L)</strong> Export selected level or all levels to KML </h2>

<p><img src="/images/blog/ingress/c-export.jpg" alt="" /></p>

<p>If problems or suggestions when using the extension, please leave the details or send me an email. Thanks.</p>

<p>Wish the chrome extension "<a href="https://chrome.google.com/webstore/detail/ingress-portals-finder/pglalnoakjpjaaobdjabdkedimkdnegk?hl=en-US">Ingress Portals Finder</a>" help you in playing the game. Enjoy!</p>

<h2>The CRX file (v1.3.7)</h2>

<p>It's taken down from Chrome Web Store today. Here's the temporary link for the CRX file of the extension: <a href="/soft/ingress-portals-finder-1.3.7.crx">Download Ingress Portals Finder</a> (MD5: <strong>7448feb6f2cbb7f502e35a86ccb1411a</strong>)</p>

<h2>Install Steps: 1) Download and save the CRX file  2) open chrome://extensions/  3) Drag and drop the CRX file in the window...</h2>

<p><i id="link-tags">Ingress;Chrome Web Store</i></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ingress! Ingress! Design and Develop A Chrome Extension - Ingress Portals]]></title>
    <link href="http://mindon.github.com/blog/2013/01/19/ingress-ingress-design-and-develop-a-chrome-extension-ingress-portals/"/>
    <updated>2013-01-19T14:46:00+08:00</updated>
    <id>http://mindon.github.com/blog/2013/01/19/ingress-ingress-design-and-develop-a-chrome-extension-ingress-portals</id>
    <content type="html"><![CDATA[<p>The game Ingress is spreading around the world.</p>

<p><a href="https://chrome.google.com/webstore/detail/ingress-portals/pglalnoakjpjaaobdjabdkedimkdnegk">Ingress Portals</a> helps us to find local portals around us.</p>

<p>It helps a lot especially for newbies of Ingress to find an zero level portal.</p>

<p>The idea to develop such an extension for Ingress comes from another extension "<a href="https://chrome.google.com/webstore/detail/ingress-hk-portal-list/pmeaadpkjfcepcokljbbbolckdejopcf">Ingress: HK Portal List</a>" -- developed by <a href="http://http//blog.shawtim.com/">Shawtim</a>. Someone in a QQ group wanted to change it to apply to Shenzhen area.</p>

<p>I made some improvement in this totally re-design and develop extension.</p>

<ol>
<li><p>Simpler UI and faster start-speed;</p></li>
<li><p>Area select from an embedded Google Map;</p></li>
<li><p>Easy view for Level, Energy, Links and Mods;</p></li>
<li><p>Cache same query in 5 minutes;</p></li>
<li><p>Locate portals with an embedded Google Map;</p></li>
<li><p>Help to find zero level portals;</p></li>
<li><p>Show all portals in a single large Google Map;</p></li>
<li><p>Usage leading page.</p></li>
</ol>


<!--more-->


<p>When you click the extension icon:</p>

<pre><code>if (NOT in ingress.com) then

    return showing about and usage message.

end if

if (Cached) then

    return get cache data and show results

end if

Show querying spin.

Submit query.

if (No Auth) then

    return Show no auth message

end if

if (Failed) then

    return Show failed message

end if


Cache result

Show result through template


:: JS template engine in a sandbox iframe;

:: Google Map shows in a sandbox iframe;

:: Using postMessage communicate between the sandbox iframe and the extension.
</code></pre>

<p>The extension spread from a Chinese Ingress QQ group, then to a community in Google+.</p>

<p>First 2 days, 186 installation. and yesterday the installation reached 865, 143 G+ and 10 reviews in Chrome Web Store.</p>

<p>It's amazing that someone outside there likes your app and appreciates your work.</p>

<p><img src="/images/blog/chrome/find-ingress-portals.png" alt="" /></p>

<p>The Chrome Extension: <a href="https://chrome.google.com/webstore/detail/ingress-portals/pglalnoakjpjaaobdjabdkedimkdnegk">Ingress Portals</a></p>

<p><i id="link-tags">Ingress;Chrome Extesion;QQ;Google Map</i></p>
]]></content>
  </entry>
  
</feed>
