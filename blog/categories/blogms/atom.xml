<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: BlogMS | Mindon.IDEA]]></title>
  <link href="http://mindon.github.com/blog/categories/blogms/atom.xml" rel="self"/>
  <link href="http://mindon.github.com/"/>
  <updated>2014-08-22T07:07:01+08:00</updated>
  <id>http://mindon.github.com/</id>
  <author>
    <name><![CDATA[Mindon Feng]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[香港西贡盐田檡的天主堂]]></title>
    <link href="http://mindon.github.com/blog/2010/07/31/old-blogms-1004648722/"/>
    <updated>2010-07-31T15:00:00+08:00</updated>
    <id>http://mindon.github.com/blog/2010/07/31/old-blogms-1004648722</id>
    <content type="html"><![CDATA[<p>BlogMS original blog key: 1004648722, blog id: mindon
History stat: 浏览/评论：4/0  ,  日期：2010年7月31日 15:00</p>

<p><img src="/images/blogms/1004648722-1.jpeg" alt="" /></p>

<!--more-->


<p><img src="/images/blogms/1004648722-2.jpeg" alt="" /></p>

<p><img src="/images/blogms/1004648722-3.jpeg" alt="" /></p>

<p><img src="/images/blogms/1004648722-4.jpeg" alt="" /></p>

<p><img src="/images/blogms/1004648722-5.jpeg" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AND首次海外自由行—普吉岛(照片)]]></title>
    <link href="http://mindon.github.com/blog/2010/05/17/old-blogms-1004474417/"/>
    <updated>2010-05-17T21:22:00+08:00</updated>
    <id>http://mindon.github.com/blog/2010/05/17/old-blogms-1004474417</id>
    <content type="html"><![CDATA[<p>BlogMS original blog key: 1004474417, blog id: airoff
History stat: 浏览/评论：48/0  ,  日期：2010年5月17日 21:22</p>

<p>结束了新加坡短短的两天之后，我们继续飞行来到了泰国的普吉岛(Phuket)——入住Patong海湾的Burasari酒店。</p>

<p><img src="/images/blogms/1004474417-1.jpeg" alt="" /></p>

<!--more-->


<p><img src="/images/blogms/1004474417-2.jpeg" alt="" /></p>

<p>Patong这边的东西比起PP岛来说，实惠很多，而且能讲价。Phi-Phi岛上价格基本讲不了多少。</p>

<p><img src="/images/blogms/1004474417-3.jpeg" alt="" /></p>

<p><img src="/images/blogms/1004474417-4.jpeg" alt="" /></p>

<p>酒店挺大的，环境很好。</p>

<p><img src="/images/blogms/1004474417-5.jpeg" alt="" /></p>

<p><img src="/images/blogms/1004474417-6.jpeg" alt="" /></p>

<p>Aby喜欢的鸡蛋花</p>

<p><img src="/images/blogms/1004474417-7.jpeg" alt="" /></p>

<p>在Patong看了人妖表演，就感觉那些人挺可怜的，在结束后拿镜头扫了扫。</p>

<p><img src="/images/blogms/1004474417-8.jpeg" alt="" /></p>

<p>前往Phi-Phi岛的船</p>

<p><img src="/images/blogms/1004474417-9.jpeg" alt="" /></p>

<p>猜猜这是什么？</p>

<p><img src="/images/blogms/1004474417-10.jpeg" alt="" /></p>

<p>Phi-Phi岛上便宜又好吃的小店</p>

<p><img src="/images/blogms/1004474417-11.jpeg" alt="" /></p>

<p><img src="/images/blogms/1004474417-12.jpeg" alt="" /></p>

<p>PP岛海边玩火的人</p>

<p><img src="/images/blogms/1004474417-13.jpeg" alt="" /></p>

<p><img src="/images/blogms/1004474417-14.jpeg" alt="" /></p>

<p><img src="/images/blogms/1004474417-15.jpeg" alt="" /></p>

<p>由于曼谷形势紧张，我们放弃了飞往曼谷从那回深圳的机票，改从普吉飞香港回深圳。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AND首次海外自由行--沙巴(照片) ]]></title>
    <link href="http://mindon.github.com/blog/2010/05/17/old-blogms-1004474367/"/>
    <updated>2010-05-17T20:41:00+08:00</updated>
    <id>http://mindon.github.com/blog/2010/05/17/old-blogms-1004474367</id>
    <content type="html"><![CDATA[<p>BlogMS original blog key: 1004474367, blog id: airoff
History stat: 浏览/评论：34/0  ,  日期：2010年5月17日 20:41</p>

<p>首站：深圳直飞沙巴Sabah (马来西亚)</p>

<p><img src="/images/blogms/1004474367-1.jpeg" alt="" /></p>

<!--more-->


<p>入住Le Meridien</p>

<p><img src="/images/blogms/1004474367-2.jpeg" alt="" /></p>

<p>Sapi岛码头的鱼群</p>

<p><img src="/images/blogms/1004474367-3.jpeg" alt="" /></p>

<p><img src="/images/blogms/1004474367-4.jpeg" alt="" /></p>

<p>反S型的迷人迷你海滩</p>

<p><img src="/images/blogms/1004474367-5.jpeg" alt="" /></p>

<p>Sapi岛上拍照的美女</p>

<p><img src="/images/blogms/1004474367-6.jpeg" alt="" /></p>

<p>日落</p>

<p><img src="/images/blogms/1004474367-7.jpeg" alt="" /></p>

<p>新记肉骨茶</p>

<p><img src="/images/blogms/1004474367-8.jpeg" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[健康关注：塑胶瓶底的三角形内的数字！ ]]></title>
    <link href="http://mindon.github.com/blog/2010/03/18/old-blogms-1002768279/"/>
    <updated>2010-03-18T13:14:00+08:00</updated>
    <id>http://mindon.github.com/blog/2010/03/18/old-blogms-1002768279</id>
    <content type="html"><![CDATA[<p>BlogMS original blog key: 1002768279, blog id: airoff
History stat: 浏览/评论：153/0  ,  日期：2010年3月18日 13:14</p>

<p><FONT size=3>塑胶瓶里面含一种叫做PET的塑料材质，用一次是安全的，如果你因节俭或方便而重复使用，就有致癌危机。 塑胶瓶底部都有一个带箭头的三角型 , 三角型里面有一个数字。</FONT></p>

<!--more-->


<p><FONT size=6>1</FONT>PET 聚对苯二甲酸乙二醇脂</p>

<p>常见矿泉水瓶、碳酸饮料瓶等 。耐热至70℃易变形， 有对人体有害的物质融出。1号塑料品用了10个月后，可能释放出致癌物DEHP。不能放在汽车内晒太阳；不要装酒、油等物质</p>

<p><FONT size=6>2</FONT>HDPE高密度聚乙烯</p>

<p>常见白色药瓶、清洁用品、沐浴产品。不要再用来做为水杯，或者用来做储物容器装其他物品。清洁不彻底，不要循环使用。</p>

<p><FONT size=6>3</FONT>ＰＶＣ 聚氯乙烯</p>

<p>常见雨衣、建材、塑料膜、塑料盒等。可塑性优良，价钱便宜，故使用很普遍，只能耐热81℃.高温时容易有不好的物质产生,很少被用于食品包装。难清洗易残留，不要循环使用。若装饮品不要购买。</p>

<p><FONT size=6>4</FONT>ＰＥ 聚乙烯</p>

<p>常见保鲜膜、塑料膜等 。 高温时有有害物质产生，有毒物随食物进入人体后，可能引起乳腺癌、新生儿先天缺陷等疾病。 保鲜膜别进微波炉。</p>

<p><FONT size=6>5</FONT>ＰＰ 聚丙烯</p>

<p>常见豆浆瓶、优酪乳瓶、果汁饮料瓶、微波炉餐盒 。熔点高达167℃，是唯一可以放进微波炉的塑料盒，可在小心清洁后重复使用。需要注意，有些微波炉餐盒，盒体以5号PP制造，但盒盖却以1号PE制造，由于PE不能抵受高温，故不能与盒体一并放进微波炉。</p>

<p><FONT size=6>6</FONT>ＰＳ 聚苯乙烯</p>

<p>常见碗装泡面盒、快餐盒 。不能放进微波炉中，以免因温度过高而释出化学物。装酸（如柳橙汁）、碱性物质后，会分解出致癌物质。避免用快餐盒打包滚烫的食物。别用微波炉煮碗装方便面。</p>

<p><FONT size=6>7</FONT>PC其它类</p>

<p>常见水壶、太空杯、 奶瓶。百货公司常用这样材质的水杯当赠品。很容易释放出有毒的物质双酚A，对人体有害。使用时不要加热，不要在阳光下直晒。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[建立Web应用的即时数据通道：WebSocket & Comet ]]></title>
    <link href="http://mindon.github.com/blog/2010/03/02/old-blogms-1002751443/"/>
    <updated>2010-03-02T17:10:00+08:00</updated>
    <id>http://mindon.github.com/blog/2010/03/02/old-blogms-1002751443</id>
    <content type="html"><![CDATA[<p>BlogMS original blog key: 1002751443, blog id: airoff
History stat: 浏览/评论：248/0  ,  日期：2010年3月2日 17:10</p>

<p>在web应用高速发展，SNS火爆的今天，基于web的即时数据通道的需求也越来越强烈了。于是COMET重新出来亮相了，HTML5更是加入了 WebSocket 和 EventSource 这样的技术标准。</p>

<!--more-->


<p>WebSocket目前可以在 Chrome 4+ 上很流畅地体验：</p>

<UL>
<LI><A href="http://github.com/gimite/web-socket-js"><U><FONT color=#0000ff>http://github.com/gimite/web-socket-js</FONT></U></A>

这个使用 flash 实现其它浏览器的支持。



</LI>
<LI>WebSocket C++实现示例 （Server）

<A href="http://hi.baidu.com/_sivis_/blog/item/7362889ac15addbec9eaf4a1.html"><U><FONT color=#0000ff>http://hi.baidu.com/_sivis_/blog/item/7362889ac15addbec9eaf4a1.html</FONT></U></A>



</LI>
<LI>还有这个，也是C++的

<A href="http://www.koders.com/cpp/fid2296B02C54B3A52535134064D4626AA04CD3B689.aspx?s=setwindowshookex"><U><FONT color=#0000ff>http://www.koders.com/cpp/fid2296B02C54B3A52535134064D4626AA04CD3B689.aspx?s=setwindowshookex</FONT></U></A>



</LI>
<LI>这个是 php 的 Server 实现

<A href="http://code.google.com/p/phpwebsocket/"><U><FONT color=#0000ff>http://code.google.com/p/phpwebsocket/</FONT></U></A>



</LI>
<LI>Go语言的 Server 示例

<A href="http://golang.org/src/pkg/websocket/websocket.go"><U><FONT color=#0000ff>http://golang.org/src/pkg/websocket/websocket.go</FONT></U></A>



</LI>
<LI>Node.js的 Server 示例

<A href="http://devthought.com/blog/2009/12/nodejs-and-the-websocket-protocol/"><U><FONT color=#0000ff>http://devthought.com/blog/2009/12/nodejs-and-the-websocket-protocol/</FONT></U></A></LI></UL>


<p>JavaScript 代码就很简单了</p>

<pre><code>var ws = new WebSocket("ws://mindon.demo:1234/service");
ws.onopen = function(evt) {
    wsock.send('hello world');
};
ws.onmessage = function(evt) { alert(evt.data); };
ws.onclose = function(evt){};&lt;/PRE&gt;
</code></pre>

<DIV>至于<B>EventSource</B>，Opera 9 就开始试验性的支持&lt;event-source id="myes" src="http://mindon.demo/service?type=event-stream" /&gt; 这样的标签。</DIV>


<p><A href="http://labs.opera.com/news/2006/09/01/"><U><FONT color=#0000ff>http://labs.opera.com/news/2006/09/01/</FONT></U></A></p>

<DIV>服务器输出: (Content-Type: application/x-dom-event-stream) </DIV>


<pre><code>data: hello

data: 1234567
</code></pre>

<DIV>JavaScript 代码</DIV>


<pre><code>var es = new EventSource('http://mindon.demo/service?type=data-stream');
es.onopen = function(e) {
// readyState 0 CONNECTING , 1 OPEN, 2 CLOSED
};
dsock.onerror = function(e) {    };
dsock.onmessage = function(evt) {alert(evt.data)};
</code></pre>

<p>不过Opera的even-source实现有点不一样，而且在 10.50上有的例子已经不行了。</p>

<DIV>更多例子参考：<A href="http://tc.labs.opera.com/html/event-source/"><U><FONT color=#0000ff>http://tc.labs.opera.com/html/event-source</FONT></U></A></DIV>




<DIV>Opera 的 event-source 的 on 事件是可以通过 myes.addEventListener('on<I>EventName</I>', function(evt){})  动态加入，数据则是(Content-Type: application/x-dom-event-stream，而<I>EventName </I>则是自定义的字符串)</DIV>


<pre><code>Event: event-name1
data: hello

Event: event-name2
data: 1234567
</code></pre>

<DIV>而 Firefox 3 和 Safari 4 则支持<B>XHR Stream</B>，在 XmlHTTPRequest对象的 readyState == 3 时就能读取到数据并且进行响应。实现就是一般的AJAX，细节这里就不提了。</DIV>




<DIV>对于IE除了可以选择使用上面提到的 WebSocket 的Flash实现之外，就是使用 htmlfile 这个 ActiveXObject了，在IE6/7/8下都是不错的，不过会受到同一进程、同一域名连接数的限制。</DIV>




<DIV>服务器输出 (text/html)</DIV>


<pre><code>&amp;lt;script&amp;gt;document.domain="mindon.demo";d=parent.d&amp;lt;/script&amp;gt;
..... {make length no less than 256}
&amp;lt;script&amp;gt;d('hello world')&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;d('hi')&amp;lt;/script&amp;gt;&lt;/PRE&gt;
</code></pre>

<DIV>JavaScript 代码</DIV>


<pre><code>var xdoc = new ActiveXObject("htmlfile");
xdoc.open();
xdoc.write('&amp;lt;html&amp;gt;&amp;lt;script&amp;gt;document.domain="mindon.demo"&amp;lt;\/script&amp;gt;&amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;');
xdoc.close();
xdoc.parentWindow.d = function(data){ callback({data: data}) };
var cometfr = xdoc.createElement('iframe');
cometfr.src = 'http://mindon.demo/service&amp;amp;type=script-tags';
xdoc.body.appendChild(cometfr);
cometfr = null;
xdoc = null;
</code></pre>
]]></content>
  </entry>
  
</feed>
