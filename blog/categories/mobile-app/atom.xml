<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Mobile-App | Mindon.IDEA]]></title>
  <link href="http://mindon.github.com/blog/categories/mobile-app/atom.xml" rel="self"/>
  <link href="http://mindon.github.com/"/>
  <updated>2013-07-21T18:25:55+08:00</updated>
  <id>http://mindon.github.com/</id>
  <author>
    <name><![CDATA[Mindon Feng]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android App Data & Folders]]></title>
    <link href="http://mindon.github.com/blog/2013/07/20/android-data-and-folders/"/>
    <updated>2013-07-20T11:16:00+08:00</updated>
    <id>http://mindon.github.com/blog/2013/07/20/android-data-and-folders</id>
    <content type="html"><![CDATA[<p>Context context = getApplicationContext();</p>

<h2>SQLite Databases</h2>

<pre><code>context.getDatabasePath("myDbName")
</code></pre>

<h2>Cache</h2>

<p>System will clean it auto if low memory</p>

<pre><code>context.getCacheDir()
</code></pre>

<h2>Lib</h2>

<p>context.getFilesDir()</p>

<h2>Apk &amp; resources path</h2>

<p>context.getPackageCodePath()
context.getPackageResourcePath</p>

<h2>Shared Preferences</h2>

<p>getSharedPreferences()
getPreferences()</p>

<h2>Internal Storage</h2>

<p>removed when uninstall the app
MODE_PRIVATE | MODE_APPEND | MODE_WORLD_READABLE | MODE_WORLD_WRITEABLE</p>

<pre><code>FileOutputStream fos = openFileOutput(flName, Context.MODE_PRIVATE);    
fos.write(content.getBytes());    
fos.close();  
</code></pre>

<h2>Internal Files Operations</h2>

<p>Internal files path</p>

<p>.getDir()
.getFilesDir()
.deleteFile()
.fileList</p>

<h2>External Storage</h2>

<p><strong>Checking media availability</strong></p>

<p>.getExternalStorageState()</p>

<p>Environment.MEDIA_MOUNTED | MEDIA_MOUNTED_READ_ONLY</p>

<pre><code>Environment.getExternalStorageDirectory()


Environment.getExternalStoragePublicDirectory(
        Environment.DIRECTORY_PICTURES
    )


&lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/&gt;
</code></pre>

<p>.getExternalStoragePublicDirectory()</p>

<p>Environment.DIRECTORY_MUSIC | DIRECTORY_PICTURES | DIRECTORY_RINGTONES</p>

<p>.getExternalCacheDir()</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DaSign: Light up your life]]></title>
    <link href="http://mindon.github.com/blog/2013/07/09/dasign-light-up-your-life/"/>
    <updated>2013-07-09T22:54:00+08:00</updated>
    <id>http://mindon.github.com/blog/2013/07/09/dasign-light-up-your-life</id>
    <content type="html"><![CDATA[<h2>DaSign</h2>

<p>The  signs to light up your life.</p>

<p>It's Mindon first Android app :D</p>

<p>It's more than a SVG(Scalable Vector Graphics) viewer, but a powerful tool to declare yourself.</p>

<p>Small install package size - 0.3MB only! 90+ super HD signs included!</p>

<p>Show it with your nexus 7, it will be super cool!</p>

<p>Do not hesitate to show it when your L8 ingress team taking photos.</p>

<p><img src="/images/blog/dasign/prompt.png" alt="" /></p>

<p>It's <strong>FREE</strong>, without any advertisements.</p>

<!--more-->


<p>If you are an ingress player, you should own it.</p>

<p>If you reach L8 in the game ingress, taking a team photo, you need it.</p>

<p>If you are a Mayday fans, It makes your group special.</p>

<p>If you like others to be Mayday fans, equip them with it.</p>

<p>It fits all kinds of screens with high resolution. Yes, it's vector.(SVG format)</p>

<p>[Operations]  1) Long tap or slide to show list; 2) Double tap to show information of the sign; 3) Tap to hide list.</p>

<p>Here's the Google Play link : <a href="https://play.google.com/store/apps/details?id=com.mindon.idea.dasign">DaSign @ Google Play</a>.</p>

<p><img src="/images/blog/dasign/dasign-qr.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cascades Native App Development Tips]]></title>
    <link href="http://mindon.github.com/blog/2013/03/23/blackberry-cascades-native-app-development-tips/"/>
    <updated>2013-03-23T21:42:00+08:00</updated>
    <id>http://mindon.github.com/blog/2013/03/23/blackberry-cascades-native-app-development-tips</id>
    <content type="html"><![CDATA[<p>Google+ Community - <a href="https://plus.google.com/communities/102767584651216621172">Blackberry 10 X-Dev : Cascades &amp; WebWorks for BB10</a></p>

<p>News: <strong>BlackBerry Z10 Officially Available on AT&amp;T</strong></p>

<blockquote><p>The BlackBerry Z10 smartphone is now officially available on AT&amp;T.</p>

<p>The struggling manufacturer — which is hopeful its new flagship device will ignite a company resurgence — announced on Friday the Z10 can finally be activated on AT&amp;T. It costs $199 with a two-year contract.</p>

<p>BlackBerry, formerly known as Research In Motion (RIM), also sent a tweet at midnight ET announcing Best Buy will start selling the device on Friday for $199 with a two-year contract.</p></blockquote>

<p><a href="http://us.blackberry.com/smartphones/blackberry-z10.html">BlackBerry Z10: Built to Keep You Moving</a></p>

<h2>Using proxy with the command line tools</h2>

<p>Remember to use --proxyhost &amp; -proxyport as the FIRST two parameters when using command line tools from blackberry.tools.SDK.</p>

<!--more-->


<p>example:</p>

<pre><code>blackberry-signer -proxyhost 12.34.56.78 -proxyport 8080 ....
</code></pre>

<p>Download the Command-line Tools from <a href="https://developer.blackberry.com/android/tools/">https://developer.blackberry.com/android/tools/</a></p>

<p>Unzip and set the path blackberry.tools.SDK/bin to env. variable PATH then you could use the apk2bar, blackberry-signer or other command line tools.</p>

<h2>How to signed the .bar through a proxy?</h2>

<p>Use <strong>batchbar-signer</strong> won't work. you could use blackberry-signer directly.</p>

<p>Example:</p>

<pre><code>blackberry-signer -proxyhost 12.34.56.78 -proxyport 8080 -storepass your_store_pwd demo.bar
</code></pre>

<p>the command tools could be found <a href="https://developer.blackberry.com/android/tools/">https://developer.blackberry.com/android/tools/</a></p>

<h2><strong>config.pri</strong> NOT including sources &amp; headers, make failed error</h2>

<p>When building project in QNX Momentics IDE, If nothing to compile. It may be lack of sources &amp; headers in your auto-generated config.pri</p>

<p>This is caused by incorrect source folder settings, here's the steps to solve the problem:</p>

<ol>
<li><p>Right click on the project in "Project Explorer", choose "Properties" at the bottom</p></li>
<li><p>On the left top input field with tips "type filter text", input "paths"</p></li>
<li><p>Click on the item "Paths and Symbols" under "C/C++ General"</p></li>
<li><p>Activate the 3rd tab named "Source Location"</p></li>
<li><p>add the proper source folder by Click "Add Folder" and choose "src"</p></li>
<li><p>"Delete the" incorrect source folder</p></li>
</ol>


<h2><strong>config.pri</strong> not auto generated or updated?</h2>

<p>Update your SDK to 10.0.10+</p>

<h2>Steps to test an app before submit to (Blackberry) App World</h2>

<ol>
<li><p>Upload app and place in DRAFT mode.</p></li>
<li><p>Add user to the sandbox (BBID).</p></li>
<li><p>Enter (Blackberry) <strong>App World</strong> on device, swipe down to see the app menu, choose <strong>settings</strong>, click <strong>Development Mode</strong>, enter content id.</p></li>
</ol>


<p><i id="link-tags">Blackberry Z10;Blackberry</i></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SSH Connect to BB10 Device]]></title>
    <link href="http://mindon.github.com/blog/2013/03/02/ssh-connect-to-bb10-device/"/>
    <updated>2013-03-02T00:23:00+08:00</updated>
    <id>http://mindon.github.com/blog/2013/03/02/ssh-connect-to-bb10-device</id>
    <content type="html"><![CDATA[<p>How to connect to your BB10 device or simulator?</p>

<h2>Step 1:</h2>

<p><strong>Turn on Development Mode</strong></p>

<h2>Step 2: </h2>

<p><strong>Creating an RSA2 key</strong></p>

<pre><code>ssh-keygen -t rsa -b 4096
</code></pre>

<p>and choose a name as you like, here using <strong>rsa-bbx</strong></p>

<h2>Step 3: </h2>

<p><strong>Start Connect Service</strong></p>

<pre><code>blackberry-connect -targetHost 169.254.0.1 -devicePassword 1234 -sshPublicKey rsa-bbx.pub
</code></pre>

<p>keep this console there.</p>

<!--more-->


<h2>Step 4:</h2>

<p><strong>Make the SSH connection</strong></p>

<p>start another console, make the ssh connection</p>

<pre><code>ssh devuser@169.254.0.1 -i rsa-bbx
</code></pre>

<p>If you are connecting to a simulator, find the IP at the bottom of simulator window.</p>

<p>NOTICE: Make sure the file <strong>rsa-bbx</strong> and <strong>rsa-bbx.pub</strong> is in current path, or you could use its full path.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Era of Hardware Browsers]]></title>
    <link href="http://mindon.github.com/blog/2013/01/06/era-of-hardware-browsers/"/>
    <updated>2013-01-06T23:27:00+08:00</updated>
    <id>http://mindon.github.com/blog/2013/01/06/era-of-hardware-browsers</id>
    <content type="html"><![CDATA[<p>Years ago, I took all desktop apps as some specific browsers - only visiting specified data resources provided by IP or file path with fixed UIs. and the browsers load different function DLLs or SO(Share Object) by URL, which contains both data and runnable source code.</p>

<p>Now days, The "Browsers" become hardware -- the mobiles and tablets. The apps are modules of the super "Hardware Browser", they are combining the local resources, remote resources provided by IPs or URLs. Traditional browser become a soft-module of the super "Hardware Browser".</p>

<p>The mobile "Hardware Browser" never be parasitic on an PC any more, it takes less time to start, and cost less energy to perform the same or even more powerful functions.</p>

<p>And the "Hardware Browser" is facing the same compatible problems as the "Software Browser" on PC. They own different screen resolutions, powered by different OS.</p>

<p>That means the mobile app developers are in the same situation as the web front-end developers are. They are working for the mobile "Hardware Browser".</p>

<p><i id="link-tags">Hardware Browser</i></p>
]]></content>
  </entry>
  
</feed>
