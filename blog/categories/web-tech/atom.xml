<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Web-Tech | Mindon.IDEA]]></title>
  <link href="http://mindon.github.com/blog/categories/web-tech/atom.xml" rel="self"/>
  <link href="http://mindon.github.com/"/>
  <updated>2013-02-18T20:47:47+08:00</updated>
  <id>http://mindon.github.com/</id>
  <author>
    <name><![CDATA[Mindon Feng]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The PHP-CLD: Chromium Compact Language Detector for PHP]]></title>
    <link href="http://mindon.github.com/blog/2013/02/06/the-php-cld-chromium-compact-language-detector-for-php/"/>
    <updated>2013-02-06T00:05:00+08:00</updated>
    <id>http://mindon.github.com/blog/2013/02/06/the-php-cld-chromium-compact-language-detector-for-php</id>
    <content type="html"><![CDATA[<p>Find a fantasy extension for php to detect string language.</p>

<p><a href="https://github.com/lstrojny/php-cld">https://github.com/lstrojny/php-cld</a></p>

<p><a href="http://code.google.com/p/chromium-compact-language-detector/">http://code.google.com/p/chromium-compact-language-detector/</a></p>

<p>It needs some changes to complie as dll in VC++ 2010 Express. But easy to make the so under linux.</p>

<p>I'd spent the whole day to make research on language detect modules for php, it's the best and now works fine in my project.</p>

<p>Thanks, <a href="https://github.com/lstrojny">Lars Strojny</a> from github.</p>

<p>Don't hesitate to use php-cld when you need something like this in php.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning GO language]]></title>
    <link href="http://mindon.github.com/blog/2013/01/19/learning-go-language/"/>
    <updated>2013-01-19T14:14:00+08:00</updated>
    <id>http://mindon.github.com/blog/2013/01/19/learning-go-language</id>
    <content type="html"><![CDATA[<p>Go语言几年前（2009）就出来了，喜欢其设计理念：简单、并行、实用和高效。</p>

<p>因为大多数时间都作为Web前端跟javascript较劲的工程师，对Go的了解并不多。这两年倒是一直在关注Node.JS。</p>

<p>Node.JS作为Web实时数据服务是非常不错的选择，曾用来做了好几个试验性质的产品，一个翻译平台（荒置中，新版正在用业余时间开发），一个支持多语言的反馈平台（在线），一个任意网站嵌入式的Web聊天平台（下线），一个推送微信官方消息的系统（闲置）。</p>

<p>Node.JS用来做产品原型，或者SDK工具等工具类，是再适合不过了。Blackberry 10的WebWorks SDK里就用了Node.JS作为辅助工具。</p>

<p>目前为止Node.JS还是我最喜欢的技术。然而，作为后台服务语言，其实Node.JS能做到的，大多其它语言也可以做得更好，除了Node.JS可以和前端使用同样的js库之外。Go这时重新进入了我的视野，也成为了新的学习任务。</p>

<p>“Go is an expressive, concurrent, garbage-collected programming language.”</p>

<p>官方网站 <a href="http://golang.org">Go official website</a> 不知道什么原因被列入了和谐名单（因为用的是Google的服务器吗？） 大家可以访问 <a href="https://code.google.com/p/go/">https://code.google.com/p/go/</a> 至少偶尔能访问一下。要不就得翻墙了。</p>

<p>在这主要是想分享一下配置Go project时候的碰到的一个问题的解决办法（under windows）：</p>

<!--more-->


<p>GO project Windows env. settings:</p>

<h2>set-env.bat content</h2>

<pre><code>set GOPATH=f:\labs\go-learn\mindon
set GOBIN=%GOPATH%\bin
set PATH=%PATH%;%GOBIN%
</code></pre>

<ol>
<li><p>configure your project path as GOPATH</p></li>
<li><p>run set-env.bat in your DOS console</p></li>
<li><p>go install</p></li>
</ol>


<p>These settings will eliminate the errors "can't load package" under Windows.</p>

<p>另外一个是编译Go本身时候碰到的问题</p>

<p>When building #Go under Windows, got following error:</p>

<pre><code>cmd/dist/windows.c:119: warning: dereferencing type-punned pointer will break strict-aliasing rules
</code></pre>

<p>update the windows.c line 119</p>

<pre><code>(Rune*)&amp;r --&gt; (Rune*)r
</code></pre>

<p>then run all.bat :-) works fine!</p>

<p><i id="link-tags">GO;Node.JS;Blackberry 10</i></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Start DOS Console Minimized]]></title>
    <link href="http://mindon.github.com/blog/2013/01/17/start-dos-console-minimized/"/>
    <updated>2013-01-17T07:59:00+08:00</updated>
    <id>http://mindon.github.com/blog/2013/01/17/start-dos-console-minimized</id>
    <content type="html"><![CDATA[<p>How to start an DOS console window minimized? (for an .bat or .cmd file) Here comes the code</p>

<pre><code>@echo off

if "%1"=="start-min" goto :begin
start /min "" %0 start-min
exit

:begin
title Hello Mini World

echo Call something here

pause
exit
@echo on
</code></pre>

<p>这大概就是最直接，简单无需额外工具启动windows console并将其最小化的批处理脚本吧 :-p 非原创，网上捡来的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning Lately]]></title>
    <link href="http://mindon.github.com/blog/2012/12/30/learning-lately/"/>
    <updated>2012-12-30T14:31:00+08:00</updated>
    <id>http://mindon.github.com/blog/2012/12/30/learning-lately</id>
    <content type="html"><![CDATA[<p>这段时间接触和试验了不少新的东西：</p>

<ul>
<li>Blackberry 10 Webworks App Demo (HTML5)</li>
</ul>


<p>尝试了一下BB10的 Webworks App开发，HTML5的性能表现还是不错的，只不过即便如此，HTML5 App的性能表现和Native App的差距还是不小的。而且，BB10的Webworks用的 JNext 最新更新竟然还是2008年的东西…… 另外就是调试和.so的依赖方面会碰到不小的麻烦。</p>

<p>中间还小试验了一下具有左右手差异内容滚动角度的UI表现。</p>

<ul>
<li>Blackberry 10 Cascades App Demo (QML + C++)</li>
</ul>


<p>在放弃了Webworks后，转向试验 Cascades 开发。使用作为UI描述的QML类似 JSON 形式，采用 Javascript 脚本实现 UI 交互。虽说UI有Chrome插件来预览，不过交互脚本的调试并不方便。不过应用的调试倒是比webworks app方便很多。</p>

<ul>
<li>Chrome App独立窗口应用</li>
</ul>


<p>Chrome 20版本开始支持独立窗口的应用，可以使用TCP建立监听及其他的一系列支持。独立窗口让Chrome App表现得更像桌面应用了。可惜目前这类应用在浏览器没有启动的时候独立启动的话，所有的Extension都会同时启动，使得启动缓慢——如果可以禁止掉独立应用窗口的插件加载就完美了。</p>

<!--more-->


<ul>
<li>再玩CodeIgniter</li>
</ul>


<p>基于php的应用框架CodeIgniter其简单入手，良好性能，完备文档和活跃社区对于中小应用来说都是相当不错的选择。</p>

<p>HydridAuth用来作为第三方的登录验证方式也是不错的选择。</p>

<ul>
<li>Go语言及Google AppEngine</li>
</ul>


<p>Google的Go语言确实是一门使用的编程语言，目的是为开发人员解决问题，而不是纠结于语言的设计。</p>

<p>为了练习一下Go语言，就另外建了一个GAE App，用来作为最近的兴趣研究开发。</p>

<ul>
<li>Chrome App (Native Client)</li>
</ul>


<p>通过Chrome来实现跨平台应用，也是个比较好玩的途径。只进行了简单的开发环境搭建和试验，碰到了些问题——某些需要的接口因为会造成对系统的依赖，所以需要用第三方的实现方式。暂没做深入研究。</p>

<ul>
<li> 独立游戏和LUA</li>
</ul>


<p>前段时间在部门分享里听了一个来自互娱的同事分享关于独立游戏的状况，激起了对游戏的一点兴趣。而自己之前Javascript玩的几个HTML5小游戏，所以准备了解一下手机游戏的开发框架，如Corona SDK和MOAI SDK，这两个都是用Lua语言来开发跨平台游戏的，不过我对开源且支持Chrome Native Client的MOAI 比较关注。</p>

<p>搭建了开发环境及Hello world，不过Moai App作为Chrome Nacl应用要带的库就有20+M大小，有点重了。</p>

<p>Android下运行没能成功显示，不知何故，后续有时间再进行探讨。</p>

<ul>
<li>Firefox App</li>
</ul>


<p>这个是把之前整理的一个HTML5小游戏封装成了 Firefox package app for Firfox OS。 看起来Firefox Marketplace 跟 Chrome Webstore有几分相似：也分Host App/Package App。 搭的GAE Go App正好为提交 Host App 当了试验服务器。</p>

<p><i id="link-tags">Blackberry 10;Webworks;Cascades;QML,Chrome App,Native Client;HydridAuth;CodeIgniter;MOAI SDK;Corona SDK;Lua;Firefox OS;Chrome Webstore</i></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CSS3 Tai-Chi Diagram]]></title>
    <link href="http://mindon.github.com/blog/2012/08/28/css3-tai-chi/"/>
    <updated>2012-08-28T21:25:00+08:00</updated>
    <id>http://mindon.github.com/blog/2012/08/28/css3-tai-chi</id>
    <content type="html"><![CDATA[<p>If you cannot see a Tai-Chi diagram, then your browser is old enough. Maybe you should update it to a morden one: IE9+, Safari, Chrome or Firefox, or Opera.</p>

<p>If you could see a rolling Tai-Chi, then your browser is ready for CSS3, that will be great.</p>

<!--more-->


<p>Here's the Chinese Tai-Chi diagram:</p>

<div>
<link rel="stylesheet" type="text/css" href="http://mindon.github.com/blog/styles/tai-chi.css" >
<div class="yinyang">
  <div class="yin"><div class="yinc"><div class="yind"></div></div></div>
  <div class="yang"><div class="yangc"><div class="yangd"></div></div></div>
</div>
<!--[if lt IE 9]>
It's a pitty, you are using a browser out of the date.
<![endif]-->
</div>


<p>Wood-Fire-Metal-Water-Earth! The 5 fundamental elements running circle balance in a human body.</p>
]]></content>
  </entry>
  
</feed>
